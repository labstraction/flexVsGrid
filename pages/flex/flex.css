/*giochino flex (https://flexboxfroggy.com/#it) */

* {
    box-sizing: border-box;
    border: 1px solid red;
}

html,
body {
    margin: 0px;
    padding: 0px;
}

body{
    display: flex;
    flex-direction: column;
    /* il default della flex è flex direction row,
    se voglio che si distribuisca in verticale devo
    indicare la flex-direction: column; */
}

header{
    height: 400px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.central-container{
    display: flex;
    min-height: 800px;
    flex-wrap: wrap;
    /* flex wrap consente al contenitore di mandare a capo gli elementi
    quando non hanno più spazio e non riescono a stringersi ulteriormente
    per fare andare a capo è spesso usato con min-width */
}

nav{
    flex-grow: 1;
    min-width: 200px;
    min-height: 200px;
}

main{
    flex-grow: 5;
    display: flex;
    flex-direction: column;
    /* il default della flex è flex direction row,
    se voglio che si distribuisca in verticale devo
    indicare la flex-direction: column; */
    min-width: 600px;
}

.main-row{
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    flex-wrap: wrap;
    /* flex wrap consente al contenitore di mandare a capo gli elementi
    quando non hanno più spazio e non riescono a stringersi ulteriormente
    per fare andare a capo è spesso usato con min-width */
}

footer{
    min-height: 500px;
    display: flex;
    flex-direction: column;
    /* il default della flex è flex direction row,
    se voglio che si distribuisca in verticale devo
    indicare la flex-direction: column; */
}

.footer-row{
    display: flex;
    flex-grow: 4;
    flex-wrap: wrap;
    /* flex wrap consente al contenitore di mandare a capo gli elementi
    quando non hanno più spazio e non riescono a stringersi ulteriormente
    per fare andare a capo è spesso usato con min-width */
}

.footer-map{
    flex-grow: 1;
    flex-basis: 0; 
    /* flex basis definisce la dimensione base di un elemento prima della
    ridistribuzione dello spazio (il default è la dimensione del contenuto)
    (https://css-tricks.com/snippets/css/a-guide-to-flexbox/) */
    min-width: 350px;
    min-height: 250px;
}

.footer-p-1{
    flex-grow: 1;
    flex-basis: 0;
    /* flex basis definisce la dimensione base di un elemento prima della
    ridistribuzione dello spazio (il default è la dimensione del contenuto)
    (https://css-tricks.com/snippets/css/a-guide-to-flexbox/) */
    min-width: 350px;
    min-height: 250px;
}

.footer-p-2{
    flex-grow: 1;
    flex-basis: 0;
    /* flex basis definisce la dimensione base di un elemento prima della
    ridistribuzione dello spazio (il default è la dimensione del contenuto)
    (https://css-tricks.com/snippets/css/a-guide-to-flexbox/) */
    min-width: 350px;
    min-height: 250px;
}

.footer-p-3{
    flex-grow: 1;
}

.no-margin {
    margin: 0px;
}

.square {
    height: 350px;
    width: 350px;
    object-fit: cover;
    /* object fit permette di decidere come l'immagine viene distribuita 
    nello spazio disponibile, è utile quando ho dimensioni fisse sia di
    height che di width; è simile a background-size */
    border-radius: 175px;
}

.main-p {
    width: 350px;
}